import React, { useState, useEffect, useMemo } from "react";

function ProductSearch() {
  const [products, setProducts] = useState([]);
  const [search, setSearch] = useState("");

  useEffect(() => {
    fetch("https://dummyjson.com/products?limit=6")
      .then((res) => res.json())
      .then((data) => setProducts(data.products));
  }, []);

  const filteredProducts = useMemo(() => {
    console.log("Filtering completed");
    return products.filter((p) =>
      p.title.toLowerCase().includes(search.toLowerCase())
    );
  }, [products, search]);

  return (
    <div className="p-4">
      <p className="text-base font-bold">
        –ó–∞–¥–∞–Ω–∏–µ 1: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å useMemo. <br /> –°–¥–µ–ª–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ProductSearch,
        –∫–æ—Ç–æ—Ä—ã–π: <br />- –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã —Å API https://dummyjson.com/products{" "}
        <br />- –ò–º–µ–µ—Ç –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é <br />- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç useMemo, —á—Ç–æ–±—ã
        –Ω–µ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ <br />
        üëâ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —Ç–æ–≤–∞—Ä—ã —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏
        –ø–æ–∏—Å–∫–∞.
      </p>
      <p>-------------------------------</p>
      <input
        type="text"
        placeholder="Search..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        className="border p-2 mb-4"
      />
      <ul>
        {filteredProducts.map((p) => (
          <li key={p.id}>{p.title}</li>
        ))}
      </ul>
    </div>
  );
}

export default ProductSearch;
